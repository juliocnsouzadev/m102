Q: Which of the following statements are true about reconfiguring a replica set?
A:  - Servers can be either removed from the replica set, or added
    - If a member of the replica set is not avaliable, thhe replica set can still be recofigured

Q: When might you want to use an arbiter?
A:  - To make an odd number of votes in the replica set
    - To spreak the replica set over more datacenters
    - To protect against network splits

Q: Which values are valid "priority" values in a replia set configuration?
A:  - 0, 500, 88.4, 88

Q: In which of the following scenarios does it make sense to use slave delay?
A:  - Prevent against a new client application release bug
    - During development when using experimental queries

Q: Generally, is it typical for servers to have different vote counts?
A: No

Q; Imagine you're using a 5-server replica set and you have critical inserts which you do not want the potential for a rollback to happen. You also have to consider that secondaries may be taken down from to time for maintenance, leaving you with a potential 4-server replica set. Which write concern is best suited for these critical inserts?
A: w=majority

Q: Write Concern is set at the DB level and every operation on this DB must use the same Write Concern:
A: False

Q: For getLastError / WriteConcern with w=3, if you have an arbiter, it counts as one of the 3
A: False

Q: Does getLastError() need to be called if using default Write Concerns?
A: No

Q: What are some issues with using wtimeout?
A:  - A write can be made but getLastError() could report a failure
    - Each query could pontentially take the full duration of the wtimeout
    - Pile-ups of connections

Q: Using the following output from ls -R, which directories house the data files for a WiredTiger mongod process?

$ ls -R
A                               C                               mongodA.log.2015-04-08T23-26-14 mongodB.log.2015-04-08T23-26-24 mongodC.log.2015-04-08T23-26-18
B                               mongodA.log                     mongodB.log                     mongodC.log

./A:
WiredTiger                          WiredTiger.wt                       collection-4-4315177254347078174.wt index-3-4315177254347078174.wt      mongod.lock
WiredTiger.basecfg                  _mdb_catalog.wt                     collection-6-4315177254347078174.wt index-5-4315177254347078174.wt      sizeStorer.wt
WiredTiger.lock                     collection-0-4315177254347078174.wt collection-7-4315177254347078174.wt index-8-4315177254347078174.wt      storage.bson
WiredTiger.turtle                   collection-2-4315177254347078174.wt index-1-4315177254347078174.wt      journal

./A/journal:
WiredTigerLog.0000000001     WiredTigerPreplog.0000000001

./B:
_tmp         journal      local.0      local.1      local.ns     mongod.lock  storage.bson test.0       test.ns

./B/_tmp:

./B/journal:
j._0 lsn

./C:
WiredTiger                          _mdb_catalog.wt                     collection-7-6008883041206081919.wt index-5-6008883041206081919.wt      storage.bson
WiredTiger.basecfg                  collection-0-6008883041206081919.wt collection-9-6008883041206081919.wt index-8-6008883041206081919.wt
WiredTiger.lock                     collection-2-6008883041206081919.wt index-1-6008883041206081919.wt      journal
WiredTiger.turtle                   collection-4-6008883041206081919.wt index-10-6008883041206081919.wt     mongod.lock
WiredTiger.wt                       collection-6-6008883041206081919.wt index-3-6008883041206081919.wt      sizeStorer.wt

./C/journal:
WiredTigerLog.0000000001     WiredTigerPreplog.0000000001

A: A, C